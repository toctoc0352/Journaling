AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar project ID.
  CodeDeployRole:
    Type: String
    Description: IAM role to allow AWS CodeDeploy to manage deployment of AWS Lambda functions
  Stage:
    Type: String
    Description: The name for a project pipeline stage, such as Staging or Prod, for which resources are provisioned and deployed.
    Default: ''

Globals:
  Function:
    AutoPublishAlias: live
    DeploymentPreference:
      Enabled: true
      Type: Canary10Percent5Minutes
      Role: !Ref CodeDeployRole

Resources:
  CustomDefaultFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: 'lambda/custom'
      Handler: journaling.handler
      Runtime: python3.7
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        AlexaSkillEvent:
          Type: AlexaSkill
  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'CodeStar-${ProjectId}-Execution${Stage}'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CodeStar_${ProjectId}_PermissionsBoundary'
  CWLtoKinesisFirehoseRole:
    Description: Creating service role in IAM for CloudWatch Logs
    Type: AWS::IAM::Role
      RoleName: !Sub 'CodeStar-${ProjectId}-Execution${Stage}'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [logs.region.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: Permissions-Policy-For-CWL
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action: [firehose:*]
            Resource: [arn:aws:firehose:region:123456789012:*]
          - Effect: Allow
            Action: [iam:PassRole]
            Resource: [arn:aws:iam::123456789012:role/CWLtoKinesisFirehoseRole]
  SubscriptionFilter:
    Type: "AWS::Logs::SubscriptionFilter"
    Properties:
      LogGroupName: "/aws/lambda/awscodestar-${ProjectId}-lambd-CustomDefaultFunction-EK2SA1MNKIGU"
      FilterPattern: ""
      DestinationArn: "arn:aws:firehose:region:${account_id}:deliverystream/Journaling"
      filter-name: "ALL"

Outputs:
  overrides:
      Value: !Sub |-
        {
          "manifest": {
            "apis": {
              "custom": {
                "endpoint": {
                  "uri": "${CustomDefaultFunction.Alias}"
                }
              }
            }
          }
        }
